{"version":3,"sources":["components/NavBar/NavBar.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","enum/ErrorTypes.ts","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavBar","_jsx","className","role","children","_jsxs","NavLink","_ref","isActive","classNames","to","_ref2","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","Link","concat","slug","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","ErrorTypes","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","loading","setLoading","_useState5","None","_useState6","error","setError","_useState7","_useState8","showTable","setShowTable","loadPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peopleFromServer","wrap","_context","prev","next","sent","_objectSpread","find","Empty","t0","Load","finish","stop","apply","arguments","useEffect","_Fragment","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.a757d71f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (\n            classNames('navbar-item',\n              { 'has-background-grey-lighter': isActive })\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (\n            classNames('navbar-item',\n              { 'has-background-grey-lighter': isActive })\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={\n              classNames({ 'has-background-warning': person.slug === slug })\n            }\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export enum ErrorTypes {\n  None = 'none',\n  Load = 'load',\n  Empty = 'empty',\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\nimport { ErrorTypes } from '../../enum/ErrorTypes';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<ErrorTypes>(ErrorTypes.None);\n  const [showTable, setShowTable] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      setLoading(true);\n      setError(ErrorTypes.None);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer.map(person => ({\n        ...person,\n        mother: peopleFromServer.find(\n          mother => mother.name === person.motherName,\n        ),\n        father: peopleFromServer.find(\n          father => father.name === person.fatherName,\n        ),\n      })));\n\n      if (!peopleFromServer) {\n        setError(ErrorTypes.Empty);\n      }\n\n      setShowTable(true);\n    } catch {\n      setError(ErrorTypes.Load);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {error === ErrorTypes.Load && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {error === ErrorTypes.Empty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {showTable && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"*\" element={<NotFoundPage />} />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}